#!/usr/bin/perl

  use Nes::Framework;
  
  use strict;
  use warnings;   
  
  my $view  = Nes::Framework::View->new( 'Cookies' );
  my $radio = Nes::Framework::Controller::Request->new( 'radio' );
  my $pref  = Nes::Framework::Controller::Cookie->new( 'PREF' );  

  my $defaults = {
      text     => 'Defaults',
      select   => '',
      checkbox => '',
      radio    => '',
  };

  # field radio in form
  $radio->set({
    _always => { expire => '1d' },
    _value  => {
      
      # radio=set, automatic fill vars in array
      set => [ 'text', 'select', 'checkbox', 'radio' ],
      
      # radio=del, del cookie and set a defaults values
      del => $defaults,   
    }, 
  });

  $pref->set({ 
    PREF    => $radio->{'value'},
    
    # set vars of radio for defaults values
    _always => sub { $radio->go },
        
    _value  => {
      set => sub { $pref->create( $radio->go ) },
      del => sub { $pref->del( $radio->go ) },        

      #      # alternative method
      #      set => sub { $pref->create( $values, $expire, ... ) },
      #      del => sub { $pref->del( ... ) },  
    }, 
  });     
  
  # fill the template with defaults and vars generated by $pref 
  $view->fill($defaults,$pref);


1;

