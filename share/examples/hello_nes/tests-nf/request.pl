#!/usr/bin/perl

  use Nes::Framework;
  
  use strict;
  use warnings;   
  
  my $view = Nes::Framework::View->new( 'Request' );
  my $form = Nes::Framework::Controller::Request->new( 'radio' );

  my $defaults = {
      text     => '',
      select   => '',
      checkbox => '',
      radio    => '',
  };

  # field radio in form
  $form->set({
    
    #    # name = value, default in Request: $form->{'q'}{'radio'}
    #    radio => $form->{'q'}{'radio'},
   
    # radio exact value
    _value  => {
      
      # radio=hash, direct fill vars
      hash    => { 
        text     => $form->{'CGI'}->param('text')     || '',
        select   => $form->{'CGI'}->param('select')   || '',
        checkbox => $form->{'CGI'}->param('checkbox') || '',
        radio    => $form->{'CGI'}->param('radio')    || '',
      },
      
      # radio=call, call function for fill vars
      call    => \&test_callback, 
      
      # radio=auto, automatic fill vars in array
      # if the name of the variable has the same name on the form
      # put the name, otherwise: { 'var_name_text' => 'form_name_text' }
      auto    => [ { 'text' => 'text' }, 'select', 'checkbox', 'radio' ],
    },

    # radio=[value] if value no is in this set or radio no set
    _empty  => { radio => 'Pelase select Auto, Hash or Callback' },
  
    #    # always, independent of the value, similary "defaults"
    #    _always => { radio => 'Default value' },
        
    #    # radio=[value] if value is defined with any value, overrides all other
    #    # options, except _empty and _always, other options were never executed.
    #    _any   => { radio => 'Any option is selected' },
    
  });

  # fill the template with defaults and vars generated by $form 
  $view->fill($defaults, $form);

  sub test_callback {
    # vars is always sent
    my $vars = shift;

    $vars->{'text'}     = $form->{'CGI'}->param('text');
    $vars->{'select'}   = $form->{'CGI'}->param('select');
    $vars->{'checkbox'} = $form->{'CGI'}->param('checkbox');
    $vars->{'radio'}    = $form->{'CGI'}->param('radio');
    
    # must always return vars
    return $vars;
  }

1;

